openapi: "3.0.0"
info:
  title: Optimus API
  description: |- 
    This is the API for the Optimus CI/CD platform
  version: 0.1.0
  contact: 
    name: Cloudflavor Org
    email: contact@cloudflavor.io
    url: https://optimus.cloudflavor.io
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: "{scheme}://{environment}.{fqdn}:{port}/{basePath}"
    variables:
      fqdn:
        default: 'optimus.cloudflavor.io'
        enum:
          - 'optimus.cloudflavor.io'
          - 'localhost'
          - '0.0.0.0'
          - '127.0.0.1'
      environment:
        default: api
        enum:
          - api
          - dev-api
          - stg-api
      port:
        default: '8443'
        enum:
          - '8443'
          - '443'
      basePath:
        default: v1
      scheme:
        default: http
        enum:
          - http
          - htttps
paths:
  /:
    get:
      summary: |-
        Lists the current available API versions.
      responses:
        '200':
          description: 200 response.
  /users:
    post:
      summary: Creates a new user.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Created
  /user/{userId}:
    get: 
      summary: Returns user details based on a valid ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of the user to be retrieved.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Returns all user details.
  /resources:
    get:
      description: Manages resources that the user has access to.
      responses:
        '200':
          description: Return all resources that the user has access to.
  /login:
    post:
      description: Accepts incoming login payload.
      responses:
        '200':
          description: Successful login action performed.